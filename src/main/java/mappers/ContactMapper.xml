<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="contact">

	<!-- 컨택 관련 매퍼 -->

	<!-- 컨택 목록 -->
	 <select id="getContactList" resultType="hashmap" parameterType="java.util.HashMap">
		SELECT 
			contact_id, 
			host_id, 
			guest_id, 
			regi_date, 
			contact_intro, 
			store_name, 
			location, 
			meeting_time, 
			start_value, 
			last_value, 
			qr_check, 
			name, 
			company, 
			host_pic
		FROM (SELECT 
				rownum rn, 
				contact_id, 
				host_id, 
				guest_id, 
				regi_date, 
				contact_intro, 
				store_name, 
				location, 
				meeting_time, 
				start_value, 
				last_value, 
				qr_check, 
	    		name, 
	    		company, 
	    		host_pic 
				FROM (SELECT 
					c.contact_id AS contact_id, 
					c.host_id AS host_id, 
					c.guest_id AS guest_id, 
					c.regi_date AS regi_date, 
					c.contact_intro AS contact_intro, 
					c.store_name AS store_name, 
					c.location AS location, 
					c.meeting_time AS meeting_time, 
					c.start_value AS start_value, 
					(SELECT 
						REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(c.last_value)), '([0-9]{3})','\1,')), '^,','') 
						FROM DUAL) AS last_value, 
					c. qr_check AS qr_check, 
		    		m.name AS name, 
		    		h.company AS company, 
		    		h.host_pic AS host_pic  
		            FROM contact c, member m, host h 
		            WHERE c.host_id = m.member_id 
						AND h.host_id = c.host_id
		            ORDER BY regi_date DESC)
		<![CDATA[
        WHERE rownum <= #{pageNum} * #{amount})
		WHERE rn > (#{pageNum}-1) * #{amount}
		
		]]>
	 </select>
	 
	 <!-- 컨택 검색 -->
	 <select id="getSearchList" resultType="hashmap" parameterType="java.util.HashMap">
		SELECT 
			c.contact_id AS contact_id, 
			c.host_id AS host_id, 
			c.guest_id AS guest_id, 
			c.regi_date AS regi_date, 
			c.contact_intro AS contact_intro, 
			c.store_name AS store_name, 
			c.location AS location, 
			c.meeting_time AS meeting_time, 
			c.start_value AS start_value, 
			(SELECT 
				REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(c.last_value)), '([0-9]{3})','\1,')), '^,','') 
				FROM DUAL) AS last_value, 
			c. qr_check AS qr_check, 
    		m.name AS name, 
    		h.company AS company, 
    		h.host_pic AS host_pic
		FROM contact c, member m, host h
		WHERE c.host_id = m.member_id 
			AND h.host_id = c.host_id 
            
            <if test="keyword != null">
            AND (UPPER(c.contact_intro) LIKE '%'||UPPER(#{keyword})||'%'
            OR UPPER(c.store_name) LIKE '%'||UPPER(#{keyword})||'%'
            OR UPPER(m.name) LIKE '%'||UPPER(#{keyword})||'%'
            OR UPPER(h.company) LIKE '%'||UPPER(#{keyword})||'%'
            OR UPPER(c.location) LIKE '%'||UPPER(#{keyword})||'%')
            </if>
			<if test='region == "1"'>
				AND REGEXP_LIKE(c.location,'서울|경기|인천')
			</if>
			<if test='region == "2"'>
				AND c.location LIKE '%강원%'
			</if>
			<if test='region == "3"'>
				AND REGEXP_LIKE(c.location,'대전|세종|충북|충남')
			</if>
			<if test='region == "4"'>
				AND REGEXP_LIKE(c.location,'광주|전북|전남')
			</if>
			<if test='region == "5"'>
				AND REGEXP_LIKE(c.location,'부산|대구|울산|경북|경남')
			</if>
			<if test='region == "6"'>
				AND c.location LIKE '%제주%'
			</if>
			
			<if test="startdate != null and startdate != ''">
			<![CDATA[
				AND TO_DATE(c.meeting_time, 'YYYY-MM-DD HH24:MI') >= #{startdate}
			]]>
			</if>
			<if test="enddate != null and enddate != ''">
			<![CDATA[
				AND TO_DATE(c.meeting_time, 'YYYY-MM-DD HH24:MI') <= #{enddate}
			]]>
			</if>
		ORDER BY c.meeting_time DESC
	 </select>

	<!-- 페이징 -->
	<select id="getTotalCnt" resultType="int">
		SELECT count(*)
		FROM contact
	</select>

	<!-- 호스트가 생성한 컨택(로그인 세션 분류) -->
	<select id="getContactOne" parameterType="int" resultType="hashmap">
		SELECT 
			contact_id, 
			host_id, 
			guest_id, 
			regi_date, 
			contact_intro, 
			store_name, 
			location, 
			meeting_time, 
			start_value, 
			last_value, 
			qr_check, 
			name, 
			company, 
			host_pic
		FROM (SELECT 
				c.contact_id AS contact_id, 
				c.host_id AS host_id, 
				c.guest_id AS guest_id, 
				c.regi_date AS regi_date, 
				c.contact_intro AS contact_intro, 
				c.store_name AS store_name, 
				c.location AS location, 
				c.meeting_time AS meeting_time, 
				(SELECT 
					REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(c.start_value)), '([0-9]{3})','\1,')), '^,','') 
					FROM DUAL) AS start_value,  
				(SELECT 
					REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(c.last_value)), '([0-9]{3})','\1,')), '^,','') 
					FROM DUAL) AS last_value, 
				c. qr_check AS qr_check, 
	    		m.name AS name, 
	    		h.company AS company, 
	    		h.host_pic AS host_pic 
			FROM contact c, member m, host h
	
			WHERE  c.host_id = m.member_id 
				AND h.host_id = c.host_id
	            ORDER BY regi_date DESC
		)

		<![CDATA[
		WHERE host_id = #{memberId}
            AND ROWNUM = 1
            AND TO_DATE(regi_date, 'YYYY-MM-DD HH24:MI:SS') + 24/24 > SYSDATE
        ]]>
	</select>

	<!-- 생성 -->
	<insert id="insertContact">
		INSERT INTO contact VALUES(
			seq_cid.nextval, 
			#{hostId}, 
			'', 
			TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), 
			#{contactIntro}, 
			#{storeName}, 
			#{location}, 
			#{meetingTime}, 
			#{startValue}, 
			#{startValue}, 
			0
		)
	</insert>

	<!-- 호스트 프로필 -->
	<select id="getHostProfile" parameterType="int" resultType="hashmap">
		SELECT 
			m.name AS name,
			m.last_conn_date AS last_conn_date,
			h.host_pic AS host_pic,
			h.company AS company,
			h.content AS content
		FROM member m, host h
		Where m.member_id = h.host_id
			AND h.host_id = #{memberId}
	</select>
	
	<!-- 컨택 비드 페이지 -->
	<select id="getBidView" parameterType="int" resultType="hashmap">
		SELECT 
		    h.host_pic AS host_pic,
		    h.company AS company,
		    h.content AS content,
		    h.host_id AS host_id,
		    m.name AS name,
		    m.last_conn_date AS last_conn_date,
		    c.contact_intro AS contact_intro,
		    c.meeting_time AS meeting_time,
		    c.store_name AS store_name,
		    c.location AS location,
		    c.regi_date AS regi_date,
		    (SELECT REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(c.last_value)), '([0-9]{3})','\1,')), '^,','') 
				FROM DUAL) AS last_value,
		    c.contact_id AS contact_id
		FROM 
		    host h,
		    member m,
		    contact c
		WHERE
		    h.host_id = m.member_id
		    AND c.host_id = h.host_id
		    AND c.contact_id = #{contactId}
	</select>
	
	<!-- 컨택 입찰 -->
		<!-- 최고입찰가 갱신 (게스트, 입찰가 변경) -->
		<update id="bidUpdate" parameterType="java.util.HashMap">
			UPDATE contact 
			SET
				guest_id = #{memberId},
				last_value = #{bidPrice} 
			WHERE contact_id = #{contactId}
		</update>
		<!-- 컨택 히스토리 내역 추가 -->
		<insert id="insertHistory" parameterType="java.util.HashMap">
			INSERT INTO contact_history
			VALUES(
				#{contactId}, 
				#{memberId}, 
				#{bidPrice}, 
				TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
			)
		</insert>
	
	<!-- 컨택 최고입찰가 확인 -->
	<select id="lastValueCheck" parameterType="int" resultType="int">
		SELECT last_value
		FROM contact
		WHERE contact_id = #{contactId}
	</select>
	
	<!-- 컨택 입찰 페이지 내 최근입찰내역 -->
	<select id="recentBidList" parameterType="int" resultType="hashmap">
		<![CDATA[ 
		SELECT 
			rn, 
			contact_id, 
			substr(name,1,length(name)-2)||lpad('*',2,'*') AS name,  
			(SELECT REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(price)), '([0-9]{3})','\1,')), '^,','') 
				FROM DUAL) AS price, 
			bid_time
		FROM (
			SELECT ROWNUM rn, contact_id, name, price, bid_time
			FROM (
				SELECT ch.contact_id contact_id, m.name name, ch.price price, ch.bid_time bid_time
			    FROM contact_history ch, member m
			    WHERE ch.guest_id = m.member_id
			    	AND contact_id = #{contactId}
			     ORDER BY ch.price DESC))
		WHERE rn <= 3
		]]>
	</select>
	
	<!-- 컨택 만남처리 -->
	<update id="qrCheckIn">
		UPDATE contact 
		SET qr_check = 1 
		WHERE contact_id = #{contactId}
	</update>	

	<!-- 마감 -->
	<!-- 마감 이후 결제처리(95%:호스트, 5%:관리자) -->
		<!-- 호스트(95%) -->
		<update id="updateHostRevenue" parameterType="int">
			UPDATE host 
			SET host_value = host_value + 
				(SELECT (last_value * 0.95)
					FROM contact
					WHERE contact_id = #{contactId})
			WHERE 
				host_id = (SELECT host_id
							FROM contact
							WHERE contact_id = #{contactId})
		</update>
		<!-- 관리자(5%) -->
		<insert id="addAdminRevenue" parameterType="int">
			INSERT INTO account VALUES(
				#{contactId},
				(SELECT (last_value * 0.05)
					FROM contact
					WHERE contact_id = #{contactId})
			)
		</insert>

	<!-- 취소 -->

	<!-- 컨택 내역 조회를 위한 매퍼 -->
	<select id="getMyContactList" parameterType="int" resultType="hashmap">
		SELECT * 
		FROM (SELECT * 
				FROM CONTACT 
				WHERE HOST_ID = #{memberId} 
					OR GUEST_ID = #{memberId}) CT, (SELECT * FROM MEMBER WHERE NOT MEMBER_ID = #{memberId}) A
		WHERE CT.HOST_ID = A.MEMBER_ID OR CT.GUEST_ID = A.MEMBER_ID
	</select>
	
	<!-- 컨택 가치 확인을 위한 매퍼 -->
	<select id="contactValue" parameterType="int" resultType="hashmap">
		
		SELECT CT.*, A.*, h.host_value, ch.cnt
		FROM (SELECT * FROM CONTACT WHERE HOST_ID = #{memberId} OR GUEST_ID = #{memberId}) CT, (SELECT * FROM MEMBER WHERE NOT MEMBER_ID = #{memberId}) A, HOST H, (SELECT CONTACT_ID, COUNT(*) AS CNT FROM contact_history CH GROUP BY CONTACT_ID) CH
		WHERE CT.HOST_ID = A.MEMBER_ID OR CT.GUEST_ID = A.MEMBER_ID AND CT.HOST_ID = H.HOST_ID AND CT.CONTACT_ID = ch.contact_id
		
		<!-- 		
	    SELECT CT.*, A.*, h.host_value
		FROM (SELECT * FROM CONTACT WHERE HOST_ID = #{memberId} OR GUEST_ID = #{memberId}) CT, (SELECT * FROM MEMBER WHERE NOT MEMBER_ID = #{memberId}) A, HOST H
		WHERE CT.HOST_ID = A.MEMBER_ID OR CT.GUEST_ID = A.MEMBER_ID AND CT.HOST_ID = H.HOST_ID
		 -->
	</select>
	
	<!-- 마이페이지 내 입찰 내역조회 -->
	<select id="getBidHistory" parameterType="int" resultType="hashmap">
		SELECT 
		    c.contact_intro AS contact_intro, 
		    m.name AS name, 
		    ch.bid_time AS bid_time, 
		    ch.price AS price, 
		    c.last_value AS last_value, 
		    c.host_id AS host_id, 
		    c.regi_date AS REGI_DATE,
		    c.contact_id AS contact_id
		FROM contact_history ch, contact c, member m
		WHERE ch.guest_id = #{memberId}
		    AND c.contact_id = ch.contact_id
		    AND m.member_id = c.host_id
	</select>
	
	
	<!-- host join table 
	<select id="" resultType="member">
		SELECT m.member_id, m.name, m.email, m.password, m.tel, m.auth, m.join_date, m.last_conn_date
		FROM member m, host h
		WHERE m.member_id = h.host_id;
	</select>
	-->
</mapper>